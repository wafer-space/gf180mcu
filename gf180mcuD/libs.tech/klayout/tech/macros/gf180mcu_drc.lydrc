<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description>Run Klayout DRC</description>
 <version>0.1</version>
 <category>drc</category>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <priority>0</priority>
 <shortcut/>
 <show-in-menu>true</show-in-menu>
 <group-name/>
 <menu-path>submenu&gt;end("gf180mcu PDK").end</menu-path>
 <interpreter>dsl</interpreter>
 <dsl-interpreter-name>drc-dsl-xml</dsl-interpreter-name>
 <text>
# Copyright 2022 GlobalFoundries PDK Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

require "yaml"

## reading the loaded gds file path
layout_path = Pathname.new(RBA::CellView.active.filename)
layout_dir = layout_path.split()[0]

## read saved options from yaml file
dir_path = File.dirname(File.expand_path(__FILE__))
options = YAML.load(File.read(dir_path + "/drc_options.yml"))

## reading the parent directory of the current file
run_dir = File.expand_path("..", dir_path)

## read the log of drc run to get output lydb file paths if run_dir option is disables 
gds_name = layout_path.split()[1].to_s.split(".")[0]

out_dir = "#{run_dir}/macros/run_drc_main"

if Dir.exist?out_dir
  `rm #{out_dir}/drc_run*.log`
end

## create options passed to run_drc.py 
options_str = "--variant=#{options["variant"]} --run_dir=#{run_dir}/macros/run_drc_main --macro_gen"

## run_drc command line
cmd = "python3 #{run_dir}/drc/run_drc.py --path=#{layout_path} #{options_str}"

## start running drc 
puts "######### running #{cmd}"
drc_res = `#{cmd}`

## pass options to main.drc
$run_mode = options["run_mode"]

if options["variant"] == "A" 
  $metal_top = "30K"
  $metal_level = "3LM"
  $mim_option = "A"
elsif options["variant"] == "B"
  $metal_top = "11K"
  $metal_level = "4LM"
  $mim_option = "B"
elsif options["variant"] == "C"
  $metal_top = "9K"
  $metal_level = "5LM"
  $mim_option = "B"
elsif options["variant"] == "D"
  $metal_top = "11K"
  $metal_level = "5LM"
  $mim_option = "B"
end

$topcell = options["top_cell_name"]

$verbose = options["verbose"]

$feol = options["feol"]

$beol = options["beol"]

$offgrid = options["offgrid"]

$conn_drc = options["connectivity"]

unless File.exist?"#{run_dir}/macros/run_drc_main/main.drc"
  STDERR.puts "file run_drc_main.drc doesn't exist"
  exit
end

## include run files

$report = "antenna.lyrdb"
#%include ../drc/rule_decks/antenna.drc
$report = "density.lyrdb"
#%include ../drc/rule_decks/density.drc
$report = "main.lyrdb"
#%include run_drc_main/main.drc


</text>
</klayout-macro>
